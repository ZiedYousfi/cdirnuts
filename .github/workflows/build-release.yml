name: Build Release

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          # Linux (x86_64)
          - os: ubuntu-latest
            triplet: x64-linux
            host_triplet: x64-linux
            target_triplet: x64-linux
            artifact_name: cdirnuts
            asset_name: cdirnuts-linux-x86_64

          # Linux (ARM64)
          - os: ubuntu-latest
            triplet: arm64-linux
            host_triplet: x64-linux
            target_triplet: arm64-linux
            artifact_name: cdirnuts
            asset_name: cdirnuts-linux-arm64
            setup_cross_compile: true

          # macOS (Intel)
          - os: macos-13
            triplet: x64-osx
            host_triplet: x64-osx
            target_triplet: x64-osx
            artifact_name: cdirnuts
            asset_name: cdirnuts-macos-x86_64

          # macOS (Apple Silicon)
          - os: macos-14
            triplet: arm64-osx
            host_triplet: arm64-osx
            target_triplet: arm64-osx
            artifact_name: cdirnuts
            asset_name: cdirnuts-macos-arm64

          # Windows (x86_64)
          - os: windows-latest
            triplet: x64-windows
            host_triplet: x64-windows
            target_triplet: x64-windows
            artifact_name: cdirnuts.exe
            asset_name: cdirnuts-windows-x86_64.exe

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Linux ARM64 cross-compilation
        if: matrix.setup_cross_compile == true
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: '3.27.x'

      - name: Set up Ninja
        uses: seanmiddleditch/gha-setup-ninja@v5

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{ github.workspace }}/../vcpkg

      - name: Configure with CMake
        run: |
          cmake --preset=vcpkg -DVCPKG_HOST_TRIPLET=${{ matrix.host_triplet }} -DVCPKG_TARGET_TRIPLET=${{ matrix.target_triplet }}
        shell: bash
        env:
          CC: ${{ matrix.setup_cross_compile && 'aarch64-linux-gnu-gcc' || '' }}
          CXX: ${{ matrix.setup_cross_compile && 'aarch64-linux-gnu-g++' || '' }}

      - name: Build
        run: cmake --build build --config Release
        shell: bash

      - name: Create artifact directory
        run: mkdir -p artifacts
        shell: bash

      - name: Copy artifact (Linux/macOS)
        if: runner.os != 'Windows'
        run: cp build/${{ matrix.artifact_name }} artifacts/${{ matrix.asset_name }}
        shell: bash

      - name: Copy artifact (Windows)
        if: runner.os == 'Windows'
        run: copy build\${{ matrix.artifact_name }} artifacts\${{ matrix.asset_name }}
        shell: cmd

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/${{ matrix.asset_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-matrix-complete:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: All platforms built successfully
        run: echo "âœ“ Release build complete for all platforms"
