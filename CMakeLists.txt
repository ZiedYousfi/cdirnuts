cmake_minimum_required(VERSION 3.13)
project(cdirnuts C)

set(CMAKE_C_STANDARD 23)

find_package(Lua REQUIRED)
# Configure Lua usage: prefer imported target Lua::Lua, otherwise fall back to include/libs
if(TARGET Lua::Lua)
  set(_USE_LUA_TARGET TRUE)
else()
  set(_USE_LUA_TARGET FALSE)
  if(NOT DEFINED LUA_INCLUDE_DIR OR NOT LUA_INCLUDE_DIR)
    find_path(LUA_INCLUDE_DIR NAMES lua.h PATH_SUFFIXES lua5.4 lua5.3 lua5.2)
  endif()
  if(NOT DEFINED LUA_LIBRARIES OR NOT LUA_LIBRARIES)
    find_library(LUA_LIBRARIES NAMES lua5.4 lua5.3 lua5.2 lua)
  endif()
endif()

add_executable(cdirnuts ${CMAKE_SOURCE_DIR}/src/main.c)
target_include_directories(cdirnuts PRIVATE ${CMAKE_SOURCE_DIR}/include ${LUA_INCLUDE_DIR})

add_library(config_impl STATIC src/config.c)
add_library(dir_impl STATIC src/dir.c)
add_library(path_impl STATIC src/path.c)
add_library(init_impl STATIC src/init.c)
add_library(log_impl STATIC src/log.c)
add_library(lua_impl STATIC src/lua_embed.c)

target_link_libraries(init_impl PUBLIC dir_impl path_impl log_impl)
target_link_libraries(dir_impl PUBLIC path_impl log_impl)
target_link_libraries(config_impl PUBLIC log_impl)

if(_USE_LUA_TARGET)
  target_link_libraries(lua_impl PRIVATE Lua::Lua log_impl)
else()
  target_include_directories(lua_impl PRIVATE ${LUA_INCLUDE_DIR})
  target_link_libraries(lua_impl PRIVATE ${LUA_LIBRARIES} log_impl)
endif()
target_include_directories(cdirnuts PRIVATE ${LUA_INCLUDE_DIR})
target_link_libraries(cdirnuts PRIVATE config_impl init_impl lua_impl)

target_compile_options(cdirnuts PRIVATE -Wall -Wextra -Werror -fsanitize=address -g)
target_link_options(cdirnuts PRIVATE -fsanitize=address)

set_target_properties(cdirnuts PROPERTIES
  RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/build
)

option(BUILD_TESTS "Build test executable" OFF)
if(BUILD_TESTS)
    add_executable(cdirnuts_test test/tests/test.c)
    target_include_directories(cdirnuts_test PRIVATE ${CMAKE_SOURCE_DIR}/include)
    target_compile_options(cdirnuts_test PRIVATE -Wall -Wextra -Werror -fsanitize=address -g)
    target_link_options(cdirnuts_test PRIVATE -fsanitize=address)
    if(_USE_LUA_TARGET)
      target_link_libraries(cdirnuts_test PRIVATE Lua::Lua)
    else()
      target_include_directories(cdirnuts_test PRIVATE ${LUA_INCLUDE_DIR})
      target_link_libraries(cdirnuts_test PRIVATE ${LUA_LIBRARIES})
    endif()
    set_target_properties(cdirnuts_test PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/build)
    enable_testing()
    add_test(NAME cdirnuts_test COMMAND ${CMAKE_SOURCE_DIR}/build/cdirnuts_test)
endif()
